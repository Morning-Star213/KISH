version: "3"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - default
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    networks:
      - default
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
      - "1025:1025"

  store:
    build:
      context: ./store
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    command: sh -c "cd store && pnpm run dev -p 3000"
    networks:
      - default

  storeadmin:
    build:
      context: ./storeadmin
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    command: sh -c "cd storeadmin && pnpm run dev -p 3001"
    networks:
      - default

  app: &app
    build: ./server
    ports:
      - "8080:8080"
    environment:
      RAILS_ENV: development
      PROTOCOL: http
      RAILS_LOG_TO_STDOUT: 1
      DATABASE_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD:
      PORT: 8080
      HTTP_HOST: http://localhost:8080
    depends_on:
      - db
      - redis
    networks:
      - default
    working_dir: "/app"
    volumes:
      - .:/app
      - bundle_install:/app/vendor/bundle
      - bundle:/app/.bundle
      - /app/node_modules
      # don't mount tmp directory
      - /app/tmp
      - ~/.ssh:/root/.ssh
    command: >
      /bin/sh -c 'cd server && bundle install -j3 --quiet && rm -f tmp/pids/server.pid && bundle exec rails s -b 0.0.0.0'
    container_name: kish-app
    tty: true
    stdin_open: true

  # worker:
  #   <<: *app
  #   restart: always
  #   ports:
  #     - 3500:3500
  #   command: >
  #     /bin/sh -c 'bundle install -j3 --quiet && bundle exec sidekiq -C config/sidekiq.yml'
  #   container_name: kish-worker

volumes:
  db_data:
  bundle_install:
  bundle:
  node_modules:
  redis_data:
